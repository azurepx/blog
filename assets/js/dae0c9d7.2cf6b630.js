"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4914],{7774:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=n(5893),i=n(1151);const o={title:"54. Spiral Matrix",tags:["array","matrix"]},s=void 0,a={id:"Leetcode/spiral-matrix/index",title:"54. Spiral Matrix",description:"Problem on Leetcode",source:"@site/docs/Leetcode/54-spiral-matrix/index.md",sourceDirName:"Leetcode/54-spiral-matrix",slug:"/Leetcode/spiral-matrix/",permalink:"/docs/Leetcode/spiral-matrix/",draft:!1,unlisted:!1,tags:[{label:"array",permalink:"/docs/tags/array"},{label:"matrix",permalink:"/docs/tags/matrix"}],version:"current",lastUpdatedAt:1709279375,formattedLastUpdatedAt:"Mar 1, 2024",frontMatter:{title:"54. Spiral Matrix",tags:["array","matrix"]},sidebar:"tutorialSidebar",previous:{title:"49. Group Anagrams",permalink:"/docs/Leetcode/group-anagram/"},next:{title:"73. Set Matrix Zeroes",permalink:"/docs/Leetcode/set-matrix-zeroes/"}},l={},d=[];function c(t){const e={a:"a",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/spiral-matrix/",children:(0,r.jsx)(e.img,{src:"https://img.shields.io/badge/Leetcode-FFA116",alt:"Problem on Leetcode"})})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.img,{src:"https://img.shields.io/badge/Difficulty-Medium-F5A9B8.svg",alt:"medium"}),(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(e.p,{children:["Given an ",(0,r.jsx)(e.code,{children:"m x n"})," matrix, return all elements of the matrix in spiral order."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"alt text",src:n(9977).Z+"",width:"242",height:"242"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [1,2,3,6,9,8,7,4,5]\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"alt text",src:n(9682).Z+"",width:"322",height:"242"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Constraints:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"m == matrix.length\nn == matrix[i].length\n1 <= m, n <= 10\n-100 <= matrix[i][j] <= 100\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Solutions"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Method 1: Iterative\n// Time complexity: O(n)\n// Space complexity: O(1)\nfunction spiralOrder(matrix: number[][]): number[] {\n  const result: number[] = [];\n  let [top, bottom, left, right] = [0, matrix.length - 1, 0, matrix[0].length - 1];\n\n  while (top <= bottom && left <= right) {\n    for (let i = left; i <= right; i++) {\n      result.push(matrix[top][i]);\n    }\n    top++;\n\n    for (let i = top; i <= bottom; i++) {\n      result.push(matrix[i][right]);\n    }\n    right--;\n\n    if (top <= bottom) {\n      for (let i = right; i >= left; i--) {\n        result.push(matrix[bottom][i]);\n      }\n      bottom--;\n    }\n\n    if (left <= right) {\n      for (let i = bottom; i >= top; i--) {\n        result.push(matrix[i][left]);\n      }\n      left++;\n    }\n  }\n\n  return result;\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Method 2: Recursive\n// Time complexity: O(n)\n// Space complexity: O(n)\nfunction spiralOrder(matrix: number[][]): number[] {\n  const result: number[] = [];\n  const spiral = (matrix: number[][], top: number, bottom: number, left: number, right: number) => {\n    if (top > bottom || left > right) return;\n\n    for (let i = left; i <= right; i++) {\n      result.push(matrix[top][i]);\n    }\n    top++;\n\n    for (let i = top; i <= bottom; i++) {\n      result.push(matrix[i][right]);\n    }\n    right--;\n\n    if (top <= bottom) {\n      for (let i = right; i >= left; i--) {\n        result.push(matrix[bottom][i]);\n      }\n      bottom--;\n    }\n\n    if (left <= right) {\n      for (let i = bottom; i >= top; i--) {\n        result.push(matrix[i][left]);\n      }\n      left++;\n    }\n\n    spiral(matrix, top, bottom, left, right);\n  }\n\n  spiral(matrix, 0, matrix.length - 1, 0, matrix[0].length - 1);\n  return result;\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Method 3: Using shift\n// Time complexity: O(n)\n// Space complexity: O(1)\nfunction spiralOrder(matrix: number[][]): number[] {\n  const result: number[] = [];\n\n  while (matrix.length) {\n    result.push(...matrix.shift());\n    for (let i = 0; i < matrix.length; i++) {\n      result.push(matrix[i].pop());\n    }\n    result.push(...(matrix.pop() || []).reverse());\n    for (let i = matrix.length - 1; i >= 0; i--) {\n      result.push(matrix[i].shift());\n    }\n  }\n\n  return result;\n}\n\ntype Direct = number[];\ntype Coordinate = {\n  dx: number,\n  dy: number\n}\n\nfunction spiralOrder(matrix: number[][]): number[] {\n  let cord:Coordinate = {\n    dx: 0,\n    dy: 0\n  }\n  //            N. E. S. W\n  let direct = [0, 1, 0, 0];\n  let res = [];\n  let turnedRight = false;\n\n  while(true) {\n    if (shouldTurnRight(cord, direct, matrix)) {\n      if (turnedRight) break;\n      direct = turnRight(direct);\n      turnedRight = true;\n    } else {\n      const {dx, dy} = cord;\n      res.push(matrix[dx][dy]);\n      matrix[dx][dy] = 0; // visited\n      cord = moveForward(cord, direct);\n      turnedRight = false;\n    }\n  }\n\n  return res;\n};\n\n\nconst turnRight = (direct: Direct): Direct => {\n  direct.unshift(direct.pop());\n  return direct;\n}\n\nconst moveForward = (cord: Coordinate, direct: Direct): Coordinate => {\n  let {dx, dy} = cord;\n  return {\n    dx: dx + direct[1] - direct[3],\n    dy: dy + direct[0] - direct[2]\n  };\n}\n\nconst shouldTurnRight = (cord: Coordinate, direct: Direct, matrix: number[][]): boolean => {\n  let {dx, dy} = moveForward(cord, direct);\n  return dx >= matrix[0].length || dy >= matrix.length ||\n    matrix[dx][dy] === 0;\n}\n"})})]})}function m(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}},9682:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/image-1-223edaf5b5aa8c77ac147a4071720ff6.png"},9977:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/image-c52472ea6e58188494d4078abaa5dd11.png"},1151:(t,e,n)=>{n.d(e,{Z:()=>a,a:()=>s});var r=n(7294);const i={},o=r.createContext(i);function s(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);