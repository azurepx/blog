"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[246],{8067:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var s=t(5893),r=t(1151);const i={title:"202. Happy Number",tags:["math","hashmap"]},o=void 0,a={id:"Leetcode/happy-number/index",title:"202. Happy Number",description:"Problem on Leetcode",source:"@site/docs/Leetcode/202-happy-number/index.md",sourceDirName:"Leetcode/202-happy-number",slug:"/Leetcode/happy-number/",permalink:"/docs/Leetcode/happy-number/",draft:!1,unlisted:!1,tags:[{label:"math",permalink:"/docs/tags/math"},{label:"hashmap",permalink:"/docs/tags/hashmap"}],version:"current",lastUpdatedAt:1707038858,formattedLastUpdatedAt:"Feb 4, 2024",frontMatter:{title:"202. Happy Number",tags:["math","hashmap"]},sidebar:"tutorialSidebar",previous:{title:"1. Two Sum",permalink:"/docs/Leetcode/two-sum/"},next:{title:"205. Isomorphic Strings",permalink:"/docs/Leetcode/isomorphic-strings/"}},c={},p=[];function l(e){const n={a:"a",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/happy-number/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/leetcode-sign",alt:"Problem on Leetcode"})})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/Difficulty-Easy-brightgreen.svg",alt:"easy"})}),"\n",(0,s.jsx)(n.p,{children:"Write an algorithm to determine if a number n is happy."}),"\n",(0,s.jsx)(n.p,{children:"A happy number is a number defined by the following process:"}),"\n",(0,s.jsx)(n.p,{children:"Starting with any positive integer, replace the number by the sum of the squares of its digits.\nRepeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.\nThose numbers for which this process ends in 1 are happy.\nReturn true if n is a happy number, and false if not."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: n = 19\nOutput: true\nExplanation:\n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: n = 2\nOutput: false\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1 <= n <= 231 - 1\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solutions"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Method 1: recursive\n// Time Complexity: O(log n)\n// Space Complexity: O(log n)\nfunction isHappy(n: number): boolean {\n  return n <= 4? n === 1: isHappy(sumOfSquaresDigits(n));\n};\n\nconst sumOfSquaresDigits = (n: number): number => {\n  let sum = 0;\n\n  while (n > 0) {\n    sum += Math.pow(n % 10, 2);\n    n = Math.floor(n / 10);\n  }\n\n  return sum;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var s=t(7294);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);